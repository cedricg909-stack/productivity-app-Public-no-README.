<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productivity Tips</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            width: 100%;
            text-align: center;
            transition: all 0.3s ease;
        }

        .container:hover {
            transform: translateY(-5px);
            box-shadow: 0 30px 60px rgba(0, 0, 0, 0.15);
        }

        .header {
            margin-bottom: 30px;
        }

        .title {
            color: #333;
            font-size: 2.5em;
            font-weight: 700;
            margin-bottom: 10px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .subtitle {
            color: #666;
            font-size: 1.1em;
            font-weight: 300;
        }

        .tip-container {
            background: linear-gradient(145deg, #f8f9ff, #e8ecff);
            border-radius: 15px;
            padding: 30px;
            margin: 30px 0;
            min-height: 150px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: inset 0 2px 10px rgba(102, 126, 234, 0.1);
            transition: all 0.3s ease;
        }

        .tip-text {
            font-size: 1.3em;
            line-height: 1.6;
            color: #333;
            font-weight: 400;
            opacity: 0;
            animation: fadeIn 0.6s ease forwards;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .btn-container {
            margin-top: 30px;
        }

        .tip-btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 1.1em;
            font-weight: 600;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
            margin: 0 10px 10px 0;
        }

        .tip-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .tip-btn:active {
            transform: translateY(0);
        }

        .secondary-btn {
            background: transparent;
            border: 2px solid #667eea;
            color: #667eea;
        }

        .secondary-btn:hover {
            background: #667eea;
            color: white;
        }

        .tip-counter {
            margin-top: 20px;
            color: #888;
            font-size: 0.9em;
            font-weight: 300;
        }

        .category-tag {
            display: inline-block;
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.8em;
            font-weight: 500;
            margin-top: 15px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        @media (max-width: 600px) {
            .container {
                padding: 30px 20px;
            }
            
            .title {
                font-size: 2em;
            }
            
            .tip-text {
                font-size: 1.1em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="title">ðŸ’¡ Productivity Tips</h1>
            <p class="subtitle">Boost your efficiency with proven strategies</p>
        </div>
        
        <div class="tip-container">
            <div class="tip-text" id="tipText">Click below to get your first productivity tip!</div>
        </div>
        
        <div class="category-tag" id="categoryTag" style="display: none;">General</div>
        
        <div class="btn-container">
            <button class="tip-btn" onclick="showRandomTip()">New Tip</button>
            <button class="tip-btn secondary-btn" onclick="showTipByCategory()">By Category</button>
        </div>
        
        <div class="tip-counter" id="tipCounter">Tips viewed: 0</div>
    </div>

    <script>
        const tips = [
            { text: "Use the Pomodoro Technique: Work for 25 minutes, then take a 5-minute break.", category: "Time Management" },
            { text: "Start your day by completing your most important task first (Eat the Frog).", category: "Planning" },
            { text: "Keep a daily to-do list and prioritize tasks using the Eisenhower Matrix.", category: "Planning" },
            { text: "Minimize distractions by turning off non-essential notifications during work hours.", category: "Focus" },
            { text: "Use keyboard shortcuts to save time on repetitive tasks.", category: "Efficiency" },
            { text: "Batch similar tasks together to maintain focus and reduce context switching.", category: "Time Management" },
            { text: "Take regular breaks to prevent burnout and maintain mental clarity.", category: "Wellness" },
            { text: "Set specific, measurable goals with deadlines to stay motivated.", category: "Goal Setting" },
            { text: "Use the 2-minute rule: If a task takes less than 2 minutes, do it immediately.", category: "Efficiency" },
            { text: "Create a dedicated workspace that's organized and free from clutter.", category: "Environment" },
            { text: "Practice the art of saying 'no' to commitments that don't align with your priorities.", category: "Planning" },
            { text: "Schedule time for email checking instead of constantly monitoring your inbox.", category: "Communication" },
            { text: "Use time-blocking to allocate specific time slots for different activities.", category: "Time Management" },
            { text: "Keep a notebook handy to capture ideas and thoughts throughout the day.", category: "Organization" },
            { text: "Review and reflect on your day each evening to identify areas for improvement.", category: "Reflection" },
            { text: "Automate recurring tasks wherever possible to free up mental energy.", category: "Automation" },
            { text: "Use the 80/20 rule: Focus on the 20% of tasks that produce 80% of results.", category: "Efficiency" },
            { text: "Set up morning and evening routines to bookend your day with structure.", category: "Habits" },
            { text: "Use templates and checklists for recurring processes to ensure consistency.", category: "Organization" },
            { text: "Take care of your physical health - exercise regularly and get adequate sleep.", category: "Wellness" },
            { text: "Learn to delegate tasks that others can do better or more efficiently.", category: "Leadership" },
            { text: "Use productivity apps and tools, but don't let them become distractions themselves.", category: "Technology" },
            { text: "Practice deep work: Set aside uninterrupted time for your most complex tasks.", category: "Focus" },
            { text: "Create deadlines for yourself, even for tasks that don't have external deadlines.", category: "Motivation" },
            { text: "Learn continuously - invest time in developing new skills and knowledge.", category: "Growth" }
        ];

        let tipCount = 0;
        let currentTipIndex = -1;
        let categoryMode = false;
        const categories = [...new Set(tips.map(tip => tip.category))];

        function showRandomTip() {
            categoryMode = false;
            let randomIndex;
            do {
                randomIndex = Math.floor(Math.random() * tips.length);
            } while (randomIndex === currentTipIndex && tips.length > 1);
            
            currentTipIndex = randomIndex;
            displayTip(tips[randomIndex]);
        }

        function showTipByCategory() {
            const randomCategory = categories[Math.floor(Math.random() * categories.length)];
            const categoryTips = tips.filter(tip => tip.category === randomCategory);
            const randomTip = categoryTips[Math.floor(Math.random() * categoryTips.length)];
            
            categoryMode = true;
            displayTip(randomTip);
        }

        function displayTip(tip) {
            const tipText = document.getElementById('tipText');
            const categoryTag = document.getElementById('categoryTag');
            const tipCounter = document.getElementById('tipCounter');

            // Reset animation
            tipText.style.animation = 'none';
            tipText.offsetHeight; // Trigger reflow
            tipText.style.animation = 'fadeIn 0.6s ease forwards';

            tipText.textContent = tip.text;
            categoryTag.textContent = tip.category;
            categoryTag.style.display = 'inline-block';

            tipCount++;
            tipCounter.textContent = `Tips viewed: ${tipCount}`;
        }

        // Show first tip automatically after a short delay
        setTimeout(() => {
            showRandomTip();
        }, 1000);
    </script>
</body>
</html>